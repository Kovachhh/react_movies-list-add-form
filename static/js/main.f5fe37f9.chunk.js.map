{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","helpers/isValidUrl.tsx","components/TextField/TextField.tsx","helpers/getRandomDigits.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","isValidUrl","url","test","TextField","name","value","label","placeholder","required","onChange","validationUrl","useState","Math","random","toFixed","slice","id","touched","setTouched","hasError","trim","hasErrorUrl","htmlFor","type","classNames","event","target","onBlur","defaultMovie","NewMovie","onAdd","count","setCount","setMovie","disabledSubmitButton","handleChange","property","prevMovie","onSubmit","preventDefault","disabled","App","moviesFromServer","setMovies","newMovie","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f5fe37f9.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","export function isValidUrl(url: string) {\n  // eslint-disable-next-line max-len\n  const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n  return pattern.test(url);\n}\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { getRandomDigits } from '../../helpers/getRandomDigits';\nimport { isValidUrl } from '../../helpers/isValidUrl';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  placeholder?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n  validationUrl?: boolean\n};\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  placeholder = `Enter ${label}`,\n  required = false,\n  onChange = () => {},\n  validationUrl,\n}) => {\n  // generage a unique id once on component load\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  // To show errors only if the field was touched (onBlur)\n  const [touched, setTouched] = useState(false);\n  const hasError = touched && required && !value.trim();\n  const hasErrorUrl = touched && required && validationUrl\n    && !isValidUrl(value);\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          type=\"text\"\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          placeholder={placeholder}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={() => setTouched(true)}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">{`${label} is required`}</p>\n      )}\n\n      {hasErrorUrl && value && (\n        <p className=\"help is-danger\">{`${label} is not valid`}</p>\n      )}\n    </div>\n  );\n};\n","export function getRandomDigits() {\n  return Math.random()\n    .toFixed(16)\n    .slice(2);\n}\n","import { useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\nimport { isValidUrl } from '../../helpers/isValidUrl';\n\ntype Props = {\n  onAdd: (newMovie: Movie) => void;\n};\n\nconst defaultMovie = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const [movie, setMovie] = useState(defaultMovie);\n\n  const disabledSubmitButton = !movie.title.trim()\n    || !movie.imgUrl.trim()\n    || !movie.imdbUrl.trim()\n    || !movie.imdbId.trim()\n    || !isValidUrl(movie.imgUrl)\n    || !isValidUrl(movie.imdbUrl);\n\n  const handleChange = (property: string, value: string) => {\n    setMovie((prevMovie) => ({ ...prevMovie, [property]: value }));\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    onAdd({\n      title: movie.title,\n      description: movie.description,\n      imgUrl: movie.imgUrl,\n      imdbUrl: movie.imdbUrl,\n      imdbId: movie.imdbId,\n    });\n\n    setCount(count + 1);\n\n    setMovie(defaultMovie);\n  };\n\n  return (\n    <form className=\"NewMovie\" key={count} onSubmit={handleSubmit}>\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={movie.title}\n        onChange={(value) => handleChange('title', value)}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={movie.description}\n        onChange={(value) => handleChange('description', value)}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        value={movie.imgUrl}\n        required\n        onChange={(value) => handleChange('imgUrl', value)}\n        validationUrl\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        value={movie.imdbUrl}\n        required\n        onChange={(value) => handleChange('imdbUrl', value)}\n        validationUrl\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={movie.imdbId}\n        required\n        onChange={(value) => handleChange('imdbId', value)}\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={disabledSubmitButton}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\n\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovie = (newMovie: Movie) => setMovies(\n    currentMovies => [...currentMovies, newMovie],\n  );\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}